package vulnerability

import (
	"context"
	"runtime"
	"testing"

	"github.com/klamhq/facter-oss/pkg/options"
	schema "github.com/klamhq/facter-schema/proto/klamhq/rpc/facter/v1"
	"github.com/sirupsen/logrus"
	"github.com/stretchr/testify/assert"
)

func TestNew(t *testing.T) {
	cfg := options.RunOptions{}
	res := New(logrus.New(), &cfg.Facter.Vulnerabilities)
	assert.NotNil(t, res)
}

func TestCollectVulnerability(t *testing.T) {
	if runtime.GOOS != "darwin" {
		cfg := options.RunOptions{}
		v := New(logrus.New(), &cfg.Facter.Vulnerabilities)
		ctx := context.Background()
		p := []*schema.Package{{}}
		res, err := v.CollectVulnerability(ctx, p)
		assert.NoError(t, err)
		assert.NotNil(t, res)
	}
}
